(()=>{"use strict";(()=>{function t(t,i){return t.getContext("2d",i)}function i(t,i,e){t.clearRect(0,0,i,e)}const{log:e,error:s,table:h,time:a,timeEnd:o,timeStamp:n,timeLog:c,assert:r,clear:l,count:u,countReset:x,group:d,groupCollapsed:g,groupEnd:m,trace:f,profile:p,profileEnd:v,warn:w,debug:D,info:y,dir:X,dirxml:Y}=console;class P{constructor(t,i,e,s,h,a,o,n=0){this.context=t,this.width=i,this.height=e,this.originX=s,this.originY=h,this.color=a,this.x=this.originX,this.y=this.originY,this.gap=n,this.size=o-this.gap,this.vectorX=0,this.vectorY=0,this.mouseParticleDistanceX=0,this.mouseParticleDistanceY=0,this.mouseTotalDistance=0,this.force=0,this.angle=0,this.friction=.6*Math.random()+.15,this.ease=.2*Math.random()+.05}update(t,i,e=2e4){this.mouseParticleDistanceX=t-this.x,this.mouseParticleDistanceY=i-this.y,this.mouseTotalDistance=Math.pow(this.mouseParticleDistanceX,2)+Math.pow(this.mouseParticleDistanceY,2);this.mouseTotalDistance<e&&(this.angle=Math.atan2(this.mouseParticleDistanceY,this.mouseParticleDistanceX),this.force=-1*e/this.mouseTotalDistance,this.vectorX=Math.cos(this.angle)*this.force,this.vectorY=Math.sin(this.angle)*this.force),this.vectorX*=this.friction,this.vectorY*=this.friction,this.x+=this.vectorX+(this.originX-this.x)*this.ease,this.y+=this.vectorY+(this.originY-this.y)*this.ease}draw(){this.context.fillStyle=this.color,this.context.fillRect(this.x,this.y,this.size,this.size)}}class M{constructor(i,s,h,a,o){this.canvas=i,this.context=t(i),this.particlesArray=[],this.text=s,this.color=h,this.fontSize=a,this.fontFamily=o,this.createText(),this.convertToPixels(2),e(this)}createText(){this.context.fillStyle=this.color,this.context.font=`${this.fontSize}px ${this.fontFamily}`,this.textMetrics=this.context.measureText(this.text),this.textX=this.canvas.width/2-this.textMetrics.width/2,this.textY=this.canvas.height/2,this.context.fillText(this.text,this.textX,this.textY),e(this.context),this.pixelsData=this.context.getImageData(0,0,this.canvas.width,this.canvas.height)}animatePixels(t,i,e=2e4){for(const s of this.particlesArray)s.update(t,i,e),s.draw()}convertToPixels(t=1){i(this.context,this.canvas.width,this.canvas.height),e(this.pixelsData);for(let i=0;i<this.pixelsData.height;i+=t)for(let e=0;e<this.pixelsData.width;e+=t){const s=4*e+4*i*this.pixelsData.width;if(this.pixelsData.data[s+3]<10)continue;const h=this.pixelsData.data[s+0],a=this.pixelsData.data[s+1],o=this.pixelsData.data[s+2],n=`rgb(${h}, ${a}, ${o})`,c=new P(this.context,this.canvas.width,this.canvas.height,e,i,n,t);this.particlesArray.push(c)}}reset(){this.particlesArray=[]}}function T(t,i){var e;if(!i)return document.querySelector(t);return(null===(e=null==i?void 0:i.tagName)||void 0===e?void 0:e.includes("-"))?i.shadowRoot.querySelector(t):i.querySelector(t)}e("Hello world!");const S=T("canvas"),z=t(S,{willReadFrequently:!0}),A=T(".index__container"),E=T(".index__input");E.addEventListener("input",(function(t){cancelAnimationFrame(q),i(z,S.width,S.height),R.reset(),R=R=new M(S,t.target.value,"black",32,"Consolas"),e(t.target.value),$()}));const b=new Map;let q=0;function F(){S.width=A.clientWidth,S.height=A.clientHeight}S.width=A.clientWidth,S.height=A.clientHeight,F(),window.addEventListener("resize",F),S.addEventListener("mousemove",(function(t){b.set("x",t.x),b.set("y",t.y)}));let R=new M(S,E.value,"black",32,"Consolas");function $(){i(z,S.width,S.height),R.animatePixels(b.get("x"),b.get("y"),b.get("radius")),q=requestAnimationFrame($)}$()})()})();